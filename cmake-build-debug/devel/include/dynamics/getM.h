// Generated by gencpp from file dynamics/getM.msg
// DO NOT EDIT!


#ifndef DYNAMICS_MESSAGE_GETM_H
#define DYNAMICS_MESSAGE_GETM_H

#include <ros/service_traits.h>


#include <dynamics/getMRequest.h>
#include <dynamics/getMResponse.h>


namespace dynamics
{

struct getM
{

typedef getMRequest Request;
typedef getMResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct getM
} // namespace dynamics


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::dynamics::getM > {
  static const char* value()
  {
    return "a55fe0135909abaa5d880290a0f368d7";
  }

  static const char* value(const ::dynamics::getM&) { return value(); }
};

template<>
struct DataType< ::dynamics::getM > {
  static const char* value()
  {
    return "dynamics/getM";
  }

  static const char* value(const ::dynamics::getM&) { return value(); }
};


// service_traits::MD5Sum< ::dynamics::getMRequest> should match 
// service_traits::MD5Sum< ::dynamics::getM > 
template<>
struct MD5Sum< ::dynamics::getMRequest>
{
  static const char* value()
  {
    return MD5Sum< ::dynamics::getM >::value();
  }
  static const char* value(const ::dynamics::getMRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::dynamics::getMRequest> should match 
// service_traits::DataType< ::dynamics::getM > 
template<>
struct DataType< ::dynamics::getMRequest>
{
  static const char* value()
  {
    return DataType< ::dynamics::getM >::value();
  }
  static const char* value(const ::dynamics::getMRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::dynamics::getMResponse> should match 
// service_traits::MD5Sum< ::dynamics::getM > 
template<>
struct MD5Sum< ::dynamics::getMResponse>
{
  static const char* value()
  {
    return MD5Sum< ::dynamics::getM >::value();
  }
  static const char* value(const ::dynamics::getMResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::dynamics::getMResponse> should match 
// service_traits::DataType< ::dynamics::getM > 
template<>
struct DataType< ::dynamics::getMResponse>
{
  static const char* value()
  {
    return DataType< ::dynamics::getM >::value();
  }
  static const char* value(const ::dynamics::getMResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // DYNAMICS_MESSAGE_GETM_H
